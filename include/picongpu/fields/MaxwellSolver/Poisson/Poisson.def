/* Copyright 2013-2024 Luca Pennati
 *
 * This file is part of PIConGPU.
 *
 * PIConGPU is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * PIConGPU is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with PIConGPU.
 * If not, see <http://www.gnu.org/licenses/>.
 */

#pragma once

#include "picongpu/fields/differentiation/Curl.def"
#include "picongpu/fields/differentiation/Derivative.def"

#include <pmacc/math/Vector.hpp>


namespace picongpu
{
    namespace fields
    {
        namespace maxwellSolver
        {
            /** None solver does nothing and effectively skips integration of Maxwell's equations
             *
             * In particular, no J contribution is added to E.
             */
            class Poisson;

        } // namespace maxwellSolver
    } // namespace fields

    namespace traits
    {
        /** Get curl(E) type in the None solver
         *
         * Put a stub zero curl so that incident field solver compiles with None field solver and None sources.
         */
        template<>
        struct GetCurlE<fields::maxwellSolver::Poisson>
        {
            using type = fields::differentiation::Curl<fields::differentiation::Zero>;
        };

        /** Get curl(B) type in the None solver
         *
         * Put a stub zero curl so that incident field solver compiles with None field solver and None sources.
         */
        template<>
        struct GetCurlB<fields::maxwellSolver::Poisson>
        {
            using type = fields::differentiation::Curl<fields::differentiation::Zero>;
        };
    } // namespace traits

} // namespace picongpu
